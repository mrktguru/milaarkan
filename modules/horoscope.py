from aiogram import types
from aiogram.dispatcher import Dispatcher
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime
import pytz

from utils.db import get_user, save_user_action, get_user_energy, update_user_energy
from utils.zodiac import get_zodiac_sign
from utils.gpt import generate_horoscope_for_sign, generate_weekly_horoscope
from modules.main_menu import show_main_menu


HOROSCOPE_PRICE = 50

def setup(dp: Dispatcher):

    @dp.callback_query_handler(lambda c: c.data == "menu_horoscope")
    async def show_horoscope_menu(callback: types.CallbackQuery):
        text = (
            "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî –∫–∞–∫ –Ω–æ–≤—ã–π —Ä–∞–∑–≤–æ—Ä–æ—Ç –ª–∏—á–Ω–æ–π –∫–Ω–∏–≥–∏ –∂–∏–∑–Ω–∏.\n"
            "–í—ã–±–µ—Ä–∏ —Ñ–æ—Ä–º–∞—Ç –≥–æ—Ä–æ—Å–∫–æ–ø–∞:"
        )
        keyboard = horoscope_menu_keyboard()
        await callback.message.edit_text(text, reply_markup=keyboard)
        await callback.answer()

    async def is_today_used(user_id: int) -> bool:
        tz = pytz.timezone("Europe/Moscow")
        today = datetime.now(tz).strftime("%Y-%m-%d")
        return await save_user_action(user_id, action="daily_horoscope", date=today, check_only=True)

    @dp.callback_query_handler(lambda c: c.data == "horoscope_today")
    async def horoscope_today(callback: types.CallbackQuery):
        user_id = callback.from_user.id
        user = await get_user(user_id)

        if await is_today_used(user_id):
            keyboard = InlineKeyboardMarkup(row_width=1).add(
                InlineKeyboardButton("üîÆ –î–∞, –ø–æ–∫–∞–∂–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞", callback_data="horoscope_tomorrow"),
                InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main_menu")
            )
            await callback.message.edit_text(
                "–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è —è —É–∂–µ —Å–æ–∑–¥–∞–ª–∞ –¥–ª—è —Ç–µ–±—è üåô\n\n"
                "–Ø –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é—Å—å ‚Äî –≤–µ–¥—å —ç–Ω–µ—Ä–≥–∏—è –º–æ–º–µ–Ω—Ç–∞ —É–∂–µ –±—ã–ª–∞ –ø—Ä–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–Ω–∞.\n"
                "–ù–æ –µ—Å–ª–∏ —Ö–æ—á–µ—à—å ‚Äî –º–æ–≥—É –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å –∑–∞—Ä–∞–Ω–µ–µ.\n\n"
                "üåø –ö–∞–∫ —Ç–µ–±–µ —Ç–∞–∫–æ–π –≤–∞—Ä–∏–∞–Ω—Ç?",
                reply_markup=keyboard
            )
            return

        energy = await get_user_energy(user_id)
        if energy < HOROSCOPE_PRICE:
            await callback.message.edit_text(
                f"‚õî –£ —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏.\n\n–î–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –Ω—É–∂–Ω–æ {HOROSCOPE_PRICE}, –∞ —É —Ç–µ–±—è ‚Äî {energy}.\n"
                "–ü–æ–ø–æ–ª–Ω–∏ –±–∞–ª–∞–Ω—Å –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–≠–Ω–µ—Ä–≥–∏—è¬ª.",
                reply_markup=InlineKeyboardMarkup().add(
                    InlineKeyboardButton("üíé –ü–æ–ø–æ–ª–Ω–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é", callback_data="menu_energy"),
                    InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main_menu")
                )
            )
            return

        await update_user_energy(user_id, -HOROSCOPE_PRICE)
        await save_user_action(user_id, action="daily_horoscope")

        if user and user[3]:
            day, month, *_ = map(int, user[3].split("."))
            sign = get_zodiac_sign(day, month)
            await callback.message.edit_text(f"‚ú® –ú–∏–ª–∞ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —Ç–≤–æ–π –∑–Ω–∞–∫... {sign} ‚ô°\n–ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ‚Ä¶")

            horoscope_parts = await generate_horoscope_for_sign(
                sign, personal=True, name=user[2]
            )

            await callback.message.edit_text(
                f"üåø {sign}: –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n\n{horoscope_parts[0]}",
                reply_markup=horoscope_menu_keyboard()
            )

            for part in horoscope_parts[1:]:
                await callback.message.answer(part)
        else:
            await callback.message.edit_text(
                "–£ —Ç–µ–±—è –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è ‚Äî —è –ø–æ–¥—Å–∫–∞–∂—É —Ç–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞.",
                reply_markup=InlineKeyboardMarkup().add(
                    InlineKeyboardButton("üß¨ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="menu_profile"),
                    InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main_menu")
                )
            )

        await callback.answer()

    @dp.callback_query_handler(lambda c: c.data == "horoscope_tomorrow")
    async def horoscope_tomorrow(callback: types.CallbackQuery):
        user = await get_user(callback.from_user.id)
        if user and user[3]:
            day, month, *_ = map(int, user[3].split("."))
            sign = get_zodiac_sign(day, month)
            await callback.message.edit_text(f"‚ú® –ú–∏–ª–∞ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π –¥–µ–Ω—å –¥–ª—è {sign} ‚ô°")

            horoscope_parts = await generate_horoscope_for_sign(
                sign, period="–∑–∞–≤—Ç—Ä–∞", personal=True, name=user[2]
            )

            await callback.message.edit_text(
                f"üåø {sign}: –≥–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –∑–∞–≤—Ç—Ä–∞\n\n{horoscope_parts[0]}",
                reply_markup=horoscope_menu_keyboard()
            )

            for part in horoscope_parts[1:]:
                await callback.message.answer(part)
        else:
            await callback.message.edit_text(
                "–ß—Ç–æ–±—ã —è –º–æ–≥–ª–∞ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π –≥–æ—Ä–æ—Å–∫–æ–ø ‚Äî –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å üí´",
                reply_markup=InlineKeyboardMarkup().add(
                    InlineKeyboardButton("üß¨ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="menu_profile"),
                    InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main_menu")
                )
            )

    @dp.callback_query_handler(lambda c: c.data == "horoscope_week")
    async def horoscope_week(callback: types.CallbackQuery):
        user = await get_user(callback.from_user.id)

        if user and user[3]:
            try:
                day, month, *_ = map(int, user[3].split("."))
                sign = get_zodiac_sign(day, month)
                await callback.message.edit_text(f"‚ú® –ú–∏–ª–∞ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –Ω–µ–¥–µ–ª—é –¥–ª—è –∑–Ω–∞–∫–∞ {sign}‚Ä¶\n–ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ üåø")

                horoscope_parts = await generate_weekly_horoscope(
                    sign,
                    personal=True,
                    name=user[2]
                )

                await callback.message.edit_text(
                    f"üìÜ –ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –Ω–µ–¥–µ–ª—é –¥–ª—è {sign}:\n\n{horoscope_parts[0]}",
                    reply_markup=horoscope_menu_keyboard()
                )

                for part in horoscope_parts[1:]:
                    await callback.message.answer(part)

            except:
                await callback.message.edit_text(
                    "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞. –ü—Ä–æ–≤–µ—Ä—å –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ.",
                    reply_markup=horoscope_menu_keyboard()
                )
        else:
            await callback.message.edit_text(
                "–£ —Ç–µ–±—è –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è, —á—Ç–æ–±—ã —è –º–æ–≥–ª–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–≤–æ–π –∑–Ω–∞–∫ üåø",
                reply_markup=InlineKeyboardMarkup().add(
                    InlineKeyboardButton("üß¨ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="menu_profile"),
                    InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main_menu")
                )
            )

    @dp.callback_query_handler(lambda c: c.data == "horoscope_personal")
    async def horoscope_personal(callback: types.CallbackQuery):
        text = (
            "üí´ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç.\n"
            "–≠—Ç–æ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–∞—è —Ä—É—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—É—é —è —Å–æ–∑–¥–∞—é –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–≤–æ–µ–π –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã: –¥–∞—Ç—ã, –≤—Ä–µ–º–µ–Ω–∏ –∏ –º–µ—Å—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è.\n\n"
            "–ù–∞ –µ—ë —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —É—Ö–æ–¥–∏—Ç –æ—Ç 2 –¥–æ 5 —á–∞—Å–æ–≤. –ù–æ –≥–ª–∞–≤–Ω–æ–µ ‚Äî –æ–Ω —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –∏–º–µ–Ω–Ω–æ —Ç–≤–æ—é —Å–∏—Ç—É–∞—Ü–∏—é, —ç–Ω–µ—Ä–≥–∏–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.\n\n"
            "–¢–∞–∫–æ–π –≥–æ—Ä–æ—Å–∫–æ–ø –ø–æ–º–æ–≥–∞–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–Ω—è—Ç—å, –Ω–æ –∏ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å ‚Äî —á—Ç–æ —Å–µ–π—á–∞—Å –≤–∞–∂–Ω–æ –∏–º–µ–Ω–Ω–æ –¥–ª—è —Ç–µ–±—è."
        )
        keyboard = InlineKeyboardMarkup().add(
            InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main_menu")
        )
        await callback.message.edit_text(text, reply_markup=keyboard)
        await callback.answer()

    @dp.callback_query_handler(lambda c: c.data == "main_menu")
    async def back_to_main(callback: types.CallbackQuery):
        await show_main_menu(callback)


def horoscope_menu_keyboard():
    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("üÜì –ù–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="horoscope_today"),
        InlineKeyboardButton("üìÜ –ù–∞ –Ω–µ–¥–µ–ª—é", callback_data="horoscope_week"),
        InlineKeyboardButton("üí´ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π", callback_data="horoscope_personal"),
        InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="main_menu")
    )
