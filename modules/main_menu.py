from aiogram import types
from aiogram.dispatcher import Dispatcher
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from utils.time_status import is_mila_online


def main_menu_keyboard():
    status = "üü¢ –ú–∏–ª–∞ –≤ —Å–µ—Ç–∏" if is_mila_online() else "üîò –ú–∏–ª–∞ –Ω–µ –≤ —Å–µ—Ç–∏"
    return InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton("üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø", callback_data="menu_horoscope"),
        InlineKeyboardButton("üÉè –¢–∞—Ä–æ-—Ä–∞—Å–∫–ª–∞–¥—ã", callback_data="menu_tarot"),
        InlineKeyboardButton("üíé –≠–Ω–µ—Ä–≥–∏—è", callback_data="menu_energy"),
        InlineKeyboardButton("üß¨ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="menu_profile"),
        InlineKeyboardButton("üìñ –û–±–æ –º–Ω–µ", callback_data="menu_about"),
        InlineKeyboardButton(status, callback_data="mila_status")
    )


async def show_main_menu(callback_or_message):
    text = (
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π.\n"
        "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–∏–ª–∞ –ê—Ä–∫–∞–Ω, —è –∞—Å—Ç—Ä–æ–ª–æ–≥ –∏ –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–∏–π –ø—Å–∏—Ö–æ–ª–æ–≥.\n\n"
        "–ï—Å–ª–∏ —Ç—ã –∑–¥–µ—Å—å ‚Äî —ç—Ç–æ –Ω–µ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å. –ò–Ω–æ–≥–¥–∞ —Å—É–¥—å–±–∞ –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –¥–µ—Ç–∞–ª–∏: –Ω—É–∂–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –≤–æ–≤—Ä–µ–º—è –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ‚Ä¶ –∏–ª–∏ –≤–æ—Ç —Ç–∞–∫–æ–π –±–æ—Ç.\n\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–Ω—è—Ç—å, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–∏ –∏ —Å–Ω–∞—Ä—É–∂–∏ ‚Äî —á–µ—Ä–µ–∑ —è–∑—ã–∫ –∑–≤—ë–∑–¥ –∏ —Å–∏–º–≤–æ–ª–æ–≤.\n\n"
        "üåø –ì–æ—Ç–æ–≤–∞ –Ω–∞—á–∞—Ç—å?"
    )
    keyboard = main_menu_keyboard()

    if isinstance(callback_or_message, types.CallbackQuery):
        await callback_or_message.message.edit_text(text, reply_markup=keyboard)
        await callback_or_message.answer()
    elif isinstance(callback_or_message, types.Message):
        await callback_or_message.answer(text, reply_markup=keyboard)


def setup(dp: Dispatcher):

    @dp.callback_query_handler(lambda c: c.data == "start")
    async def handle_start(callback: types.CallbackQuery):
        await show_main_menu(callback)

    @dp.message_handler(commands=["start"])
    async def handle_start_cmd(message: types.Message):
        await show_main_menu(message)

    @dp.callback_query_handler(lambda c: c.data == "main_menu")
    async def handle_main_menu(callback: types.CallbackQuery):
        await show_main_menu(callback)

    @dp.callback_query_handler(lambda c: c.data == "mila_status")
    async def ignore_status_click(callback: types.CallbackQuery):
        if is_mila_online():
            await callback.answer("–ú–∏–ª–∞ –æ–Ω–ª–∞–π–Ω –∏ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å —Ç–µ–±–µ üåø", show_alert=False)
        else:
            await callback.answer("–ú–∏–ª—ã —Å–µ–π—á–∞—Å –Ω–µ—Ç –≤ —Å–µ—Ç–∏. –ö–∞–∫ –±—É–¥–µ—Ç ‚Äî —Å—Ä–∞–∑—É –ø–æ—á—É–≤—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è ‚ú®", show_alert=False)
